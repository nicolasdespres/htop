/* Do not edit this file. It was automatically generated. */

#ifndef HEADER_DarwinProcess
#define HEADER_DarwinProcess
/*
htop - DarwinProcess.h
Copyright (c) 2015, Nicolas Despres
Released under the GNU GPL, see the COPYING file
in the source distribution for its full text.

Based on DarwinProcess.h
(C) 2014 Hisham H. Muhammad
Released under the GNU GPL, see the COPYING file
in the source distribution for its full text.
*/


typedef enum DarwinProcessFields {
   // Add platform-specific fields here, with ids >= 100
   LAST_PROCESSFIELD = 100,
} DarwinProcessField;

typedef struct DarwinProcess_ {
   Process super;
} DarwinProcess;

#ifndef Process_isKernelThread
#define Process_isKernelThread(_process) (_process->pgrp == 0)
#endif

#ifndef Process_isUserlandThread
#define Process_isUserlandThread(_process) (_process->pid != _process->tgid)
#endif


extern ProcessClass DarwinProcess_class;

extern ProcessFieldData Process_fields[];

extern char* Process_pidFormat;
extern char* Process_tpgidFormat;

void Process_setupColumnWidths();

DarwinProcess* DarwinProcess_new(Settings* settings);

void Process_delete(Object* cast);

void DarwinProcess_writeField(Process* this, RichString* str, ProcessField field);

long DarwinProcess_compare(const void* v1, const void* v2);

bool Process_isThread(Process* this);

#endif
